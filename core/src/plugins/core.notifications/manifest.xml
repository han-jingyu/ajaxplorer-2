<?xml version="1.0" encoding="UTF-8"?>
<ajxp_plugin label="CONF_MESSAGE[Notification Center]" description="CONF_MESSAGE[Handle users watches and notification]" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:noNamespaceSchemaLocation="file:../core.ajaxplorer/ajxp_registry.xsd">
    <class_definition classname="AJXP_NotificationCenter" filename="plugins/core.notifications/class.AJXP_NotificationCenter.php"/>
    <client_settings>
        <resources>
            <i18n namespace="notification.tpl.short" path="plugins/core.notifications/templates/short"/>
            <i18n namespace="notification.tpl.long" path="plugins/core.notifications/templates/long"/>
            <i18n namespace="notification.tpl.group" path="plugins/core.notifications/templates/group"/>
            <i18n namespace="notification_center" path="plugins/core.notifications/res/i18n"/>
            <css file="plugins/core.notifications/res/css/notification_center.css" autoload="true"/>
            <img_library alias="notification_center" path="plugins/core.notifications/res/img"/>
        </resources>
    </client_settings>
    <server_settings>
        <global_param description="CONF_MESSAGE[Post the notification in a temporary queue. You must set up the scheduler accordingly to make sure the queue is then consumed on a regularly basis.]" label="CONF_MESSAGE[Queue notifications]" name="USE_QUEUE" type="boolean" default="false"/>
    </server_settings>
    <registry_contributions>
        <actions>
            <action name="consume_notification_queue">
                <processing>
                    <serverCallback methodName="consumeQueue"/>
                </processing>
            </action>
            <action name="get_my_feed">
                <gui text="notification_center.1" title="notification_center.2" iconClass="icon-rss" src="notification_center/ICON_SIZE/feed.png" accessKey="" hasAccessKey="false">
             		<context selection="false" dir="" recycle="true" actionBar="true" actionBarGroup="user" contextMenu="false" infoPanel="false"/>
                </gui>
                <rightsContext adminOnly="false" noUser="false" read="false" userLogged="only" write="false"/>
                <subMenu>
                    <dynamicBuilder><![CDATA[
                        var context = window.builderContext;
                        var protoMenu = window.builderProtoMenu;
                        context.builderMenuItems = $A([]);
                        context.builderMenuItems.push({
                            id:'event_loading',
                            name:'Loading ...',
                            alt:'',
                            isDefault : false,
                            image:resolveImageSource('images/actions/22/hdd_external_unmount.png', '',  22),
                            icon_class:'icon-spinner event_loading',
                            callback:function(e){
                                this.apply();
                            }.bind(context)
                        } );
                        var loaderFunc = function(){
                            try{
                                var menuContainer = protoMenu.container;
                            }catch(e){}
                            if(!menuContainer) {
                                return;
                            }
                             var dm = new AjxpDataModel(true);
                             var rP = new RemoteNodeProvider();
                             rP.initProvider({get_action:'get_my_feed', format:'xml'});
                             var root = new AjxpNode("/");
                             root._iNodeProvider = rP;
                             var pFactory = new PreviewFactory();
                             pFactory.setThumbSize(16);
                             root.observeOnce("loaded", function(){
                                 menuContainer.update('');
                                 root.getChildren().each(function(el){
                                    var div = new Element('a');
                                    var imgSpan = new Element('span', {className:'event_image'});
                                    var labelSpan = new Element('span', {className:'event_label'});
                                    var img = pFactory.generateBasePreview(el);
                                    div.IMAGE_ELEMENT = img;
                                    imgSpan.insert(img);
                                    labelSpan.insert(el.getMetadata().get("event_description"));
                                    div.insert(imgSpan); div.insert(labelSpan);
                                    menuContainer.insert(div);
                                    pFactory.enrichBasePreview(el, div);
                                 });
                                 pFactory.loadNextImage();
                                elOff = protoMenu.computeAnchorOffset();
                                protoMenu.container.setStyle(elOff);
                             });
                             root.load();

                        };
                        protoMenu.options = Object.extend(protoMenu.options, {
                            position: "bottom middle",
                            menuMaxHeight: 350,
                            topOffset: 14,
                            beforeShow: function(){
                                protoMenu.container.removeClassName('panelHeaderMenu');
                                protoMenu.container.removeClassName('toolbarmenu');
                                protoMenu.container.removeClassName('desktop');
                                protoMenu.container.addClassName('rootDirChooser');
                                protoMenu.container.addClassName('events_menu');
                                protoMenu.container.id = "feed_content";
                                window.ajxp_feed_timer = window.setTimeout(loaderFunc, 500);
                            },
                            beforeHide: function(){
                                if(window.ajxp_feed_timer) window.clearTimeout(window.ajxp_feed_timer);
                            }
                        });
                    ]]></dynamicBuilder>
                </subMenu>
                <processing>
                    <clientCallback><![CDATA[


                    ]]></clientCallback>
                    <clientForm id="user_feed"><![CDATA[
                        <div id="user_feed" box_padding="0" class="dialogBox css_boxshadow">
                            <link type="text/css" rel="stylesheet" href="plugins/core.notifications/res/css/notification_center.css"/>
                            <div id="feed_content" style="width: 250px;height: 350px;overflow: auto;"></div>
                        </div>
                    ]]></clientForm>
                    <serverCallback methodName="loadUserFeed"/>
                </processing>
            </action>
        </actions>
        <hooks>
            <serverCallback methodName="persistChangeHookToFeed" hookName="node.change" defer="true"/>
        </hooks>
    </registry_contributions>
</ajxp_plugin>